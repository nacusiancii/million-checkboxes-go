# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.1'

    - name: Build
      run: go build -o mcserver
      
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
          echo "Stopping existing server..."
          pkill mcserver || true
          # Wait a moment to ensure the process has stopped
          sleep 5
          echo "Existing server stopped (if it was running)"
        '
        scp -i private_key -o StrictHostKeyChecking=no mcserver ec2-user@${HOST}:~/go/app/
        ssh -i private_key -o StrictHostKeyChecking=no ec2-user@${HOST} '
          cd ~/go/app
          nohup ./mcserver > output.log 2>&1 &
        '
